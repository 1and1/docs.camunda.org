camunda BPM Installation Guide (Tomcat 7)
=========================================

This document will guide you through the installation of camunda BPM and its components on a <a href="http://tomcat.apache.org/">Apache Tomcat 7 Server</a>.

<div class="alert alert-info">
  <strong>Reading the Guide</strong> Throughout this guide we will use a number of variables to denote common path names and constants.
  <code>$CATALINA_HOME</code> points to the main directory of the tomcat server.
  <code>$PLATFORM_VERSION</code> denotes the version of the camunda BPM platform you want to or have installed, e.g. <code>7.0.0</code>.
</div>


<a id="platform"></a>Installing the pre-built distro
----------------------------------------------------

How to...


<a id="vanilla"></a>Installing the platform on a vanilla Tomcat
---------------------------------------------------------------

How to...

In order to use the [JNDI Bindings for Bpm Platform Services on Tomcat](<%= @docUrl("guides/user-guide/") %>#jndi-bindings-services-tomcat) you have to edit the file `$CATALINA_HOME/conf/server.xml` and add the following Resources:

	<Resource name="global/camunda-bpm-platform/process-engine/ProcessEngineService!org.camunda.bpm.ProcessEngineService"
		auth="Container"
		type="org.camunda.bpm.ProcessEngineService"
		description="camunda BPM platform Process Engine Service"
		factory="org.camunda.bpm.container.impl.tomcat.deployment.ProcessEngineServiceObjectFactory" />
	          
	<Resource name="global/camunda-bpm-platform/process-engine/ProcessApplicationService!org.camunda.bpm.ProcessApplicationService"
		auth="Container"
		type="org.camunda.bpm.ProcessApplicationService"
		description="camunda BPM platform Process Application Service"
		factory="org.camunda.bpm.container.impl.tomcat.deployment.ProcessApplicationServiceObjectFactory" />


<a id="rest"></a>Installing the REST API web application
--------------------------------------------------------

To install the REST API, a Tomcat installation with the `org.camunda.bpm.camunda-engine` module is required.
See above, how to [install the pre-built distro](#platform) or [install the platform on a vanilla Tomcat](#vanilla).

**Note**: The distro already ships the REST API exposing it on the context path `/engine-rest`.

The following steps are required to deploy the REST API on a Tomcat instance:

1. Download the REST API web application archive from [our server](https://app.camunda.com/nexus/content/groups/public/org/camunda/bpm/camunda-engine-rest/).
   Choose the correct version named `$PLATFORM_VERSION/camunda-engine-rest-$PLATFORM_VERSION-tomcat.war`.
2. Copy the war file to `$CATALINA_HOME/webapps`. 
   Optionally you may rename it or extract it to a folder to deploy it to a specific context like `/engine-rest`.
3. Startup Tomcat.
4. Access the REST API on the context you configured. 
   For example, http://localhost:8080/engine-rest/engine should return the names of all engines of the platform, 
   if you deployed the application in the context `/engine-rest`.


<a id="cycle"></a>Installing camunda cycle
------------------------------------------

**Note**: The distro already ships camunda cycle. It may be accessed on the context path `/cycle`. See [here](#configure_prepackaged_cycle), how to configure the distro.

### Create the database schema for camunda cycle ###

Unless you are using the pre-packaged distribution and do not want to exchange the packaged H2 database, you first have to create a database schema for camunda cycle.
The camunda BPM distribution ships with a set of SQL create scripts that can be executed by a database administrator.

The database creation scripts reside in the `sql/create` folder:
    
    camunda-bpm-tomcat-$PLATFORM_VERSION.zip/sql/create/*_cycle_$PLATFORM_VERSION.sql

There is an individual SQL script for each supported database. Select the script appropriate for your database and run it with your database administration tool. (e.g. SqlDeveloper for Oracle).

We recommend to create a separate database or database schema for fox cycle.

<div class="alert alert-info">
  If have not got the distro at hand, you can also download a file that packages these
  scripts from [our server](https://app.camunda.com/nexus/content/groups/public/org/camunda/bpm/cycle/camunda-cycle-sql-scripts/).
  Choose the correct version named `$PLATFORM_VERSION/camunda-cycle-sql-scripts-$PLATFORM_VERSION.war`.
</div>

### <a id="configure_prepackaged_cycle"></a>Configuring the pre-packaged distribution ###
The distribution comes with a preconfigured H2 database used by cycle.

The H2 JDBC driver is located at `camunda-bpm-tomcat-$PLATFORM_VERSION.zip/server/apache-tomcat-7.0.33/lib/h2-VERSION.jar`.

#### Exchange the database ####
To exchange the preconfigured H2 database with your own, e.g. Oracle, you have to do the following:

1. Copy your JDBC database driver JAR file to `$CATALINA_HOME/lib`.
2. Open `$CATALINA_HOME/webapps/cycle/META-INF/context.xml` and edit the properties of the `jdbc/CycleDS` datasource definition.

### Install camunda cycle on vanilla Tomcat 7 ###
You can download the camunda cycle web application from [our sever](https://app.camunda.com/nexus/content/groups/public/org/camunda/bpm/cycle/camunda-cycle-tomcat/).
Choose the correct version named `$PLATFORM_VERSION/camunda-cycle-tomcat-$PLATFORM_VERSION.war`.

#### Create a datasource ####
The cycle datasource is configured in the cycle web application in the file `META-INF/context.xml`. It should be named `jdbc/CycleDS`.

In order to use a custom datasource name, you have to edit the file `WEB-INF/classes/META-INF/cycle-persistence.xml` in the cycle web application file.

In order to use the `org.apache.tomcat.jdbc.pool.DataSourceFactory`, you need to add the driver of the database you use to the `$CATALINA_HOME/lib` folder.
For example, if you plan to use the h2 database, you would have to add the h2-VERSION.jar.

<div class="alert alert-info">
  <strong>Tomcat 6.x</strong>
  <br/>
  On Tomcat 6, you will also have to add the tomcat-jdbc.jar, which ships with Tomcat 7 and the pre-packaged camunda BPM distribution, to
  `$CATALINA_HOME/lib`.
</div>

#### Install the web application ####
1. Copy the cycle war file to `$CATALINA_HOME/webapps`.
   Optionally you may rename it or extract it to a folder to deploy it to a specific context like `/cockpit`.
2. Startup Tomcat.
3. Access camunda cycle on the context you configured.

<a id="cockpit"></a>Installing camunda cockpit
----------------------------------------------

To install camunda cockpit, a Tomcat installation with the `org.camunda.bpm.camunda-engine` module is required.
See above, how to [install the pre-built distro](#platform) or [install the platform on a vanilla Tomcat](#vanilla).

**Note**: The distro already ships camunda cockpit. It may be accessed on the context path `/cockpit`.

The following steps are required to deploy camunda cockpit on a Tomcat instance:

1. Download the cockpit web application from [our server](https://app.camunda.com/nexus/content/groups/public/org/camunda/bpm/cockpit/camunda-cockpit/).
   Choose the correct version named `$PLATFORM_VERSION/camunda-cockpit-$PLATFORM_VERSION.war`.
2. Copy the war file to `$CATALINA_HOME/webapps`. 
   Optionally you may rename it or extract it to a folder to deploy it to a specific context like `/cockpit`.
3. Startup Tomcat.
4. Access camunda cockpit on the context you configured.

<a id="tasklist"></a>Installing camunda tasklist
-----------------------------------------------
To install camunda tasklist, a Tomcat installation with the `org.camunda.bpm.camunda-engine` module is required.
See above, how to [install the pre-built distro](#platform) or [install the platform on a vanilla Tomcat](#vanilla).

**Note**: The distro already ships camunda tasklist. It may be accessed on the context path `/tasklist`.

The following steps are required to deploy camunda tasklist on a Tomcat instance:

1. Download the tasklist web application from [our server](https://app.camunda.com/nexus/content/groups/public/org/camunda/bpm/tasklist/camunda-tasklist/).
   Choose the correct version named `$PLATFORM_VERSION/camunda-tasklist-$PLATFORM_VERSION.war`.
2. Copy the war file to `$CATALINA_HOME/webapps`.
   Optionally you may rename it or extract it to a folder to deploy it to a specific context like `/tasklist`.
3. Startup Tomcat.
4. Access camunda tasklist on the context you configured.