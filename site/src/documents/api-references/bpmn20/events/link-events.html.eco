<section id="link-events">

  <div class="page-header">
      <h1>Link events</h1>
  </div>
  
  <div class="row-fluid">
  <div class="span9">
      
      <p>
        Link events are special cases - it has no special execution semantics but serves as a "GoTo" to another point
        in the same process model (to be precise: in the same sub process). Hence you can use two mathcing links as an 
        alternative to a sequence flow as shown in the following example.
      </p>
      <div id="bpmn1" style="position:relative" data-bpmn-src="implement/event-link" > </div>
      <p>
        Note that you might have the same event source (throwing intermediate link event with the same event definition name) multiple times,
        but the event target (catching intermediate link event) has to be unique according to the BPMN 2.0 specification.
      </p>



    </div>
    <div class="span3">
      <h3>On this page</h3>
      <ul>            
          <li>Link Event Definition</li>
      </ul>
      <h3>There's more...</h3>
      <ul>            
          <li><a href="http://camunda.org/design/reference.html#!/events/link">Link Events in the BPMN Tutorial</a></li>
      </ul>      
    </div>
  </div>
  

<h1>Link Event Definition</h1>

<p>
  The name of the link is set by a LinkEventDefinition within the XML. Please note that this should always correspond to the name 
  of the intermediate event, otherwise this gets really confusing to everybody looking at the diagram (however, the engine just
  gives a warning as it is valid BPMN 2.0).
</p>

<div class="app-source" app-source-no-tabs="event1"></div>
<script type="text/xml" id="event1">   
<process id="someProcess">
  ...
  <intermediateThrowEvent id="IntermediateThrowEvent_1" name="LinkA">
    <linkEventDefinition id="LinkEventDefinition_1" name="LinkA"/>
  </intermediateThrowEvent>
  <intermediateCatchEvent id="IntermediateCatchEvent_1" name="LinkA">
    <linkEventDefinition id="LinkEventDefinition_2" name="LinkA"/>
  </intermediateCatchEvent>
  ...             
</process>
</script>



	
</section>