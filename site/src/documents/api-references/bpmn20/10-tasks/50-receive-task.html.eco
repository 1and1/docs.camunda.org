---

title: 'Receive Task'
category: 'Tasks'

keywords: ''

---


<p>
  A Receive Task is a simple task that waits for the arrival of a certain message. Currently, we have only implemented Java semantics for this task. When process execution arrives at a Receive Task, the process state is committed to the persistence store. This means that the process will stay in this wait state, until a specific message is received by the engine, which triggers the continuation of the process past the Receive Task.
</p>

<div data-bpmn-symbol="receivetask"  data-bpmn-symbol-name="Receive Task"> </div>

<div class="app-source" app-source-no-tabs="receive1" ></div>
<script type="text/xml" id="receive1">
<receiveTask id="waitState" name="wait" />    
</script>

<p>
  To continue a process instance that is currently waiting at such a Receive Task, the runtimeService.signal(executionId) must be called using the id of the execution that arrived in the Receive Task. The following code snippet shows how this works in practice:
</p>

<div class="app-source" app-source-no-tabs="xxxx" ></div>
<script type="text/xml" id="xxxx">
ProcessInstance pi = runtimeService.startProcessInstanceByKey("receiveTask");
Execution execution = runtimeService.createExecutionQuery()
  .processInstanceId(pi.getId())
  .activityId("waitState")
  .singleResult();
assertNotNull(execution);
    
runtimeService.signal(execution.getId());   
</script>


<h2>Additional Resources</h2>

<ul>
  <li><a href="http://camunda.org/design/reference.html#!/activities/tasks">Tasks in the BPMN Tutorial<a></li>
  <li><a href="#!/events/message-events">Message Receive Event</a></li>
</ul>